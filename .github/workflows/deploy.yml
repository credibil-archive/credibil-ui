# Builds npm packages and publishes to GitHub's npm repo (https://npm.pkg.github.com).
#
# The workflow will only run if commit message contains [tag:patch|minor|major]
name: Publish Update

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  NODE_VERSION: 16

jobs:
  # ----------------------------------------------------
  # Build npm packages, version, and publish
  #  - runs if [tag:patch|minor|major] in commit message
  # ----------------------------------------------------
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    # only run if commit message contains versioning setting
    if: |
      contains(github.event.head_commit.message, '[tag:patch]')
      || contains(github.event.head_commit.message, '[tag:minor]')
      || contains(github.event.head_commit.message, '[tag:major]')

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        # with:
        #   fetch-depth: 0

      - name: View context attributes
        uses: actions/github-script@v5
        with:
          script: console.log(context)

      - name: Git identity
        run: |
          git config --global user.name "${{ github.actor}}"
          git config --global user.email "${{ github.actor}}@users.noreply.github.com"

      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Get semver
        id: semver
        uses: actions/github-script@v5
        with:
          script: |
            const msg = "${{ github.event.head_commit.message}}"
            const start = msg.indexOf('[tag:')
            const end = msg.indexOf(']', start)
            return msg.substring(start + 5, end)
          result-encoding: string

      - name: Publish packages
        run: |
          npm install
          lerna publish ${{steps.semver.outputs.result}} \
            --conventional-commits --create-release github --yes
          # npx lerna bootstrap
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # - name: Get version
      #   id: version
      #   uses: actions/github-script@v5
      #   with:
      #     script: return require("./lerna.json").version
      #     result-encoding: string

      # - name: Get latest tag
      #   uses: actions/github-script@v5
      #   with:
      #     script: |
      #       github.rest.git.getRef({
      #         owner: context.repo.owner,
      #         repo: context.repo.repo,
      #         ref: "refs/tags/${{ steps.version.outputs.version_tag }}",
      #       })

      # see https://octokit.github.io/rest.js/v18
      # - name: Create release
      #   uses: actions/github-script@v5
      #   with:
      #     script: |
      #       github.rest.repos.createRelease({
      #         owner: context.repo.owner,
      #         repo: context.repo.repo,
      #         tag_name: "${{ steps.version.outputs.version }}"
      #       })

