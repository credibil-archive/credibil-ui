# Builds a docker image, publishes it to GitHub's docker repo (ghcr.io),
# and subsequently deploys it as a Container App revision.
#
# The workflow will only run if commit message contains [tag:patch|minor|major]
name: Deploy Update

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  NODE_VERSION: 16
  RESOURCE_GROUP: demo
  STORAGE_ACCOUNT: stremitter
  AFD_PROFILE: Credibil
  AFD_ENDPOINT: remitter

jobs:
  # ----------------------------------------------------
  # Build a docker image, tag, and publish
  #  - only runs if [tag:patch|minor|major] is found
  #    in commit message
  # ----------------------------------------------------
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    # only run if commit message contains versioning setting
    if: |
      contains(github.event.head_commit.message, '[tag:patch]')
      || contains(github.event.head_commit.message, '[tag:minor]')
      || contains(github.event.head_commit.message, '[tag:major]')

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      # - name: Generate version
      #   id: version
      #   uses: paulhatch/semantic-version@v4.0.2
      #   with:
      #     major_pattern: "[tag:major]"
      #     minor_pattern: "[tag:minor]"
      #     short_tags: false

      # - name: Tag repo
      #   uses: actions/github-script@v5
      #   with:
      #     script: |
      #       github.rest.git.createRef({
      #         owner: context.repo.owner,
      #         repo: context.repo.repo,
      #         ref: "refs/tags/${{ steps.version.outputs.version_tag }}",
      #         sha: context.sha
      #       })

      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Get semver keyword
        id: semver
        uses: actions/github-script@v5
        with:
          script: |
            const msg = ${{ github.event.head_commit.message }};
            const start = msg.indexOf("[tag:");
            const end = msg.indexOf("]", start);
            return msg.substring(start + 5, end));

      - name: Publish
        run: |
          npm install
          lerna publish ${{steps.semver.outputs.result}} --yes

      # see https://octokit.github.io/rest.js/v18
      # - name: Create release
      #   uses: actions/github-script@v5
      #   with:
      #     script: |
      #       github.rest.repos.createRelease({
      #         owner: context.repo.owner,
      #         repo: context.repo.repo,
      #         tag_name: "${{ steps.version.outputs.version_tag }}"
      #       })

